<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.lab1.dao.RepayPlanMapper" >
  <resultMap id="BaseResultMap" type="com.example.lab1.entity.RepayPlan" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="iou_num" property="iouNum" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="plan_num" property="planNum" jdbcType="DOUBLE" />
    <result column="plan_amount" property="planAmount" jdbcType="DOUBLE" />
    <result column="plan_principal" property="planPrincipal" jdbcType="DOUBLE" />
    <result column="plan_interest" property="planInterest" jdbcType="DOUBLE" />
    <result column="plan_date" property="planDate" jdbcType="DATE" />
    <result column="remain_amount" property="remainAmount" jdbcType="DOUBLE" />
    <result column="remain_principal" property="remainPrincipal" jdbcType="DOUBLE" />
    <result column="remain_interest" property="remainInterest" jdbcType="DOUBLE" />
    <result column="fine" property="fine" jdbcType="DOUBLE" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, iou_num, create_time, plan_num, plan_amount, plan_principal, plan_interest, plan_date, 
    remain_amount, remain_principal, remain_interest, fine, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.lab1.entity.RepayPlanExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from repay_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from repay_plan
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from repay_plan
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.lab1.entity.RepayPlanExample" >
    delete from repay_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.lab1.entity.RepayPlan" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into repay_plan (iou_num, create_time, plan_num, 
      plan_amount, plan_principal, plan_interest, 
      plan_date, remain_amount, remain_principal, 
      remain_interest, fine, status
      )
    values (#{iouNum,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{planNum,jdbcType=DOUBLE}, 
      #{planAmount,jdbcType=DOUBLE}, #{planPrincipal,jdbcType=DOUBLE}, #{planInterest,jdbcType=DOUBLE}, 
      #{planDate,jdbcType=DATE}, #{remainAmount,jdbcType=DOUBLE}, #{remainPrincipal,jdbcType=DOUBLE}, 
      #{remainInterest,jdbcType=DOUBLE}, #{fine,jdbcType=DOUBLE}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.lab1.entity.RepayPlan" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into repay_plan
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="iouNum != null" >
        iou_num,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="planNum != null" >
        plan_num,
      </if>
      <if test="planAmount != null" >
        plan_amount,
      </if>
      <if test="planPrincipal != null" >
        plan_principal,
      </if>
      <if test="planInterest != null" >
        plan_interest,
      </if>
      <if test="planDate != null" >
        plan_date,
      </if>
      <if test="remainAmount != null" >
        remain_amount,
      </if>
      <if test="remainPrincipal != null" >
        remain_principal,
      </if>
      <if test="remainInterest != null" >
        remain_interest,
      </if>
      <if test="fine != null" >
        fine,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="iouNum != null" >
        #{iouNum,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="planNum != null" >
        #{planNum,jdbcType=DOUBLE},
      </if>
      <if test="planAmount != null" >
        #{planAmount,jdbcType=DOUBLE},
      </if>
      <if test="planPrincipal != null" >
        #{planPrincipal,jdbcType=DOUBLE},
      </if>
      <if test="planInterest != null" >
        #{planInterest,jdbcType=DOUBLE},
      </if>
      <if test="planDate != null" >
        #{planDate,jdbcType=DATE},
      </if>
      <if test="remainAmount != null" >
        #{remainAmount,jdbcType=DOUBLE},
      </if>
      <if test="remainPrincipal != null" >
        #{remainPrincipal,jdbcType=DOUBLE},
      </if>
      <if test="remainInterest != null" >
        #{remainInterest,jdbcType=DOUBLE},
      </if>
      <if test="fine != null" >
        #{fine,jdbcType=DOUBLE},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.lab1.entity.RepayPlanExample" resultType="java.lang.Integer" >
    select count(*) from repay_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update repay_plan
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.iouNum != null" >
        iou_num = #{record.iouNum,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.planNum != null" >
        plan_num = #{record.planNum,jdbcType=DOUBLE},
      </if>
      <if test="record.planAmount != null" >
        plan_amount = #{record.planAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.planPrincipal != null" >
        plan_principal = #{record.planPrincipal,jdbcType=DOUBLE},
      </if>
      <if test="record.planInterest != null" >
        plan_interest = #{record.planInterest,jdbcType=DOUBLE},
      </if>
      <if test="record.planDate != null" >
        plan_date = #{record.planDate,jdbcType=DATE},
      </if>
      <if test="record.remainAmount != null" >
        remain_amount = #{record.remainAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.remainPrincipal != null" >
        remain_principal = #{record.remainPrincipal,jdbcType=DOUBLE},
      </if>
      <if test="record.remainInterest != null" >
        remain_interest = #{record.remainInterest,jdbcType=DOUBLE},
      </if>
      <if test="record.fine != null" >
        fine = #{record.fine,jdbcType=DOUBLE},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update repay_plan
    set id = #{record.id,jdbcType=INTEGER},
      iou_num = #{record.iouNum,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      plan_num = #{record.planNum,jdbcType=DOUBLE},
      plan_amount = #{record.planAmount,jdbcType=DOUBLE},
      plan_principal = #{record.planPrincipal,jdbcType=DOUBLE},
      plan_interest = #{record.planInterest,jdbcType=DOUBLE},
      plan_date = #{record.planDate,jdbcType=DATE},
      remain_amount = #{record.remainAmount,jdbcType=DOUBLE},
      remain_principal = #{record.remainPrincipal,jdbcType=DOUBLE},
      remain_interest = #{record.remainInterest,jdbcType=DOUBLE},
      fine = #{record.fine,jdbcType=DOUBLE},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.lab1.entity.RepayPlan" >
    update repay_plan
    <set >
      <if test="iouNum != null" >
        iou_num = #{iouNum,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="planNum != null" >
        plan_num = #{planNum,jdbcType=DOUBLE},
      </if>
      <if test="planAmount != null" >
        plan_amount = #{planAmount,jdbcType=DOUBLE},
      </if>
      <if test="planPrincipal != null" >
        plan_principal = #{planPrincipal,jdbcType=DOUBLE},
      </if>
      <if test="planInterest != null" >
        plan_interest = #{planInterest,jdbcType=DOUBLE},
      </if>
      <if test="planDate != null" >
        plan_date = #{planDate,jdbcType=DATE},
      </if>
      <if test="remainAmount != null" >
        remain_amount = #{remainAmount,jdbcType=DOUBLE},
      </if>
      <if test="remainPrincipal != null" >
        remain_principal = #{remainPrincipal,jdbcType=DOUBLE},
      </if>
      <if test="remainInterest != null" >
        remain_interest = #{remainInterest,jdbcType=DOUBLE},
      </if>
      <if test="fine != null" >
        fine = #{fine,jdbcType=DOUBLE},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.lab1.entity.RepayPlan" >
    update repay_plan
    set iou_num = #{iouNum,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      plan_num = #{planNum,jdbcType=DOUBLE},
      plan_amount = #{planAmount,jdbcType=DOUBLE},
      plan_principal = #{planPrincipal,jdbcType=DOUBLE},
      plan_interest = #{planInterest,jdbcType=DOUBLE},
      plan_date = #{planDate,jdbcType=DATE},
      remain_amount = #{remainAmount,jdbcType=DOUBLE},
      remain_principal = #{remainPrincipal,jdbcType=DOUBLE},
      remain_interest = #{remainInterest,jdbcType=DOUBLE},
      fine = #{fine,jdbcType=DOUBLE},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>